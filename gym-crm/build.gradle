plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.epam'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.36'
    hibernateValidatorVersion = '8.0.1.Final'
    mapstructVersion = '1.6.3'
    commonsLangVersion = '3.17.0'
    instancioVersion = '5.4.1'
    springDocVersion = '2.8.6'
    jwtVersion = '0.12.6'
    springCloudVersion = "2024.0.1"
}

dependencies {
    // === Core Spring Boot Starters ===
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-activemq'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // === Cloud / Microservices ===
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // === API Documentation ===
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: springDocVersion

    // === Observability / Monitoring ===
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // === Database Drivers ===
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // === Validation / Jakarta ===
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // === Lombok ===
    implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    // === Mapping / DTO Conversion ===
    implementation group: 'org.mapstruct', name: 'mapstruct', version: mapstructVersion
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion

    // === Utility Libraries ===
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: commonsLangVersion

    // === JWT ===
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: jwtVersion
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: jwtVersion
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: jwtVersion

    // == Cucumber ==
    testImplementation platform('io.cucumber:cucumber-bom:7.23.0')
    testImplementation 'io.cucumber:cucumber-java'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine'
    testImplementation 'io.cucumber:cucumber-spring'

    // === Testing Junit
    testImplementation platform('org.junit:junit-bom:5.13.2')
    testImplementation 'org.junit.platform:junit-platform-suite'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // === Testing starters ===
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation group: 'org.instancio', name: 'instancio-junit', version: instancioVersion

    // === Lombok Testing scope ===
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

}

jacoco {
    toolVersion = '0.8.10'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy(tasks.named("jacocoTestReport"))
}

jacocoTestReport {
    reports {
        html.required.set(true)
    }
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}